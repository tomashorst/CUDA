#! /bin/bash
#
# Este script puede usarse para lanzar un proceso de gpu
# Se especifica la cola gpu, se solicita una gpu y se solicita 1G RAM para el proceso
#
# Para lanzarlo copielo a un directorio en su home y en ese directorio ejecute:
# qsub ejemploGPU
#
# Los procesos en la cola gpu tienen una duración máxima de 3 días
# Los procesos en la cola gpushort tienen una duración máxima de 20 minutos
#
# El sistema de cola devuelve una variable $SGE_GPU que contiene los IDs de los dispositivos requeridos (separados por coma). Ejemplo: 0 o 0,1 dependiendo del numero de recursos pedidos
# Use este device ID para cudaSetDevice()
#
# 
# Las lineas que comienzan con #$ son opciones para el sistema de cola
# Todas explicadas en el man qsub
#
#$ -cwd
#$ -j y
#$ -S /bin/bash
#$ -q cpuINgpu
#$ -l gpu=1
#$ -l memoria_a_usar=1G
#$ -N IsingOMP
#
#cargar variables de entorno para encontrar cuda
module load cuda/10.1.243

echo DeviceID: $SGE_GPU

## Pido N slots en una misma maquina, pruebe cambiar el numero...
#$ -pe neworte 14

## Limito los threads a cantidad de slots pedidos (podria largar mas threads...)
export OMP_NUM_THREADS=14

## para controlar nomas el numero de threads que la version omp va a usar
echo "numero de threads omp = " $OMP_NUM_THREADS

#ejecutar binario con sus respectivos argumentos


##Uso: ./MiniIsingCUDA [-l L] [-r niter] [-T temp] [-s semilla] [-w snap]

echo "VERSION OMP"
./omp_miniising -l 512 -r 10000 -T 1.0 -s 123456 -w 100000000
echo 

echo "VERSION CPP"
./cpp_miniising -l 512 -r 10000 -T 1.0 -s 123456 -w 100000000
echo 


