using Plots, PlotThemes, ColorSchemes
using Statistics, Distributions
using MAT
using LinearAlgebra, ToeplitzMatrices
using FFTW
using SplitApplyCombine

function kalman_vec(x; C_v, C_etta, A, B, H, y0, M0)
    K = Matrix{Float64}[]
    y = Vector{Float64}[]
    M = Matrix{Float64}[]

    y_pred = A*y0
    M_pred = A*M0*A'+B*C_etta*B'
    push!(K, M_pred*H'*inv(C_v+H*M_pred*H'))
    push!(y, y_pred + K[1]*(x[1,:].-H*y_pred))
    push!(M, (I-K[1]*H)*M_pred)
    
    for i = 2:size(x)[1]
        y_pred = A*y[i-1]
        M_pred = A*M[i-1]*A'+B*C_etta*B'
        push!(K, M_pred*H'*inv(C_v+H*M_pred*H'))
        push!(y, y_pred + K[i]*(x[i,:].-H*y_pred))
        push!(M, (I-K[i]*H)*M_pred)
    end
    return [y, M, K]
end


# Vector de datos leidos de matread("dat_gps_vs30.mat")["pos_e"]
x = [5.186720224736173e6 -3.653608173921739e6 -653706.5651808323; 5.186732682123619e6 -3.6536153684663214e6 -653708.9778682197; 5.186795166658114e6 -3.6536553201651676e6 -653722.5932014259; 5.186905302019039e6 -3.6537170997011983e6 -653746.3715307597; 5.187069069448427e6 -3.6537981439085538e6 -653783.2622237703; 5.187283940674641e6 -3.653898703966419e6 -653830.4722383808; 5.187552343115523e6 -3.6540161965435348e6 -653888.0544995896; 5.187874349980277e6 -3.6541554085915536e6 -653958.8973386467; 5.188254245949115e6 -3.6543132580425153e6 -654042.8115226155; 5.188687004792656e6 -3.654490035857122e6 -654139.0199650859; 5.189174148851537e6 -3.6546870332633997e6 -654247.7318005641; 5.18971633526707e6 -3.654902219701409e6 -654370.182489573; 5.190319588590012e6 -3.6551382478291737e6 -654509.0852430271; 5.190975758206465e6 -3.655394334391907e6 -654661.2963431518; 5.191693204947714e6 -3.6556720631865296e6 -654825.7703586156; 5.192471617592204e6 -3.655969170209761e6 -655005.874458028; 5.193312429798232e6 -3.6562868709461438e6 -655202.922746535; 5.194217953237482e6 -3.656629942302456e6 -655414.8076402385; 5.195191177975077e6 -3.656993461480903e6 -655644.2794905803; 5.196243729190028e6 -3.6573860421479507e6 -655894.3357962273; 5.197379415045727e6 -3.657807170086944e6 -656164.9100470812; 5.19860486413856e6 -3.658262385863759e6 -656457.2818725768; 5.199895350369189e6 -3.6587371928816666e6 -656765.710105315; 5.201221934088976e6 -3.65922273980609e6 -657084.4280002965; 5.202566535951523e6 -3.659715340001292e6 -657407.7823148947; 5.2039210429778e6 -3.6602058856461877e6 -657734.9121564898; 5.205279155150108e6 -3.660696954705095e6 -658063.3934193138; 5.206625794883775e6 -3.661181563643758e6 -658391.8963159344; 5.20796731445902e6 -3.661662145271233e6 -658718.8759010851; 5.20929718093787e6 -3.662135015697514e6 -659042.623519408; 5.210613645294097e6 -3.662601890692589e6 -659366.4391422175; 5.2119198903709315e6 -3.6630627485731635e6 -659686.6848014228; 5.213216510057226e6 -3.663515971266614e6 -660006.6619314451; 5.21450216244619e6 -3.6639635626363643e6 -660324.8862164168; 5.215778536273413e6 -3.6644051291383076e6 -660641.849382054; 5.217043870743358e6 -3.6648414750908352e6 -660956.3307704903; 5.218300895122919e6 -3.665272707344226e6 -661270.4307018069; 5.219550195866607e6 -3.6656962939560995e6 -661583.8607083564; 5.220789846032464e6 -3.6661158718858436e6 -661895.5554636035; 5.222018942587342e6 -3.666527636411812e6 -662204.6487719017; 5.223239740024724e6 -3.66693475842221e6 -662513.5728227855; 5.224454277240803e6 -3.667336405619237e6 -662821.5192726741; 5.225660710840965e6 -3.6677342327199862e6 -663128.056086939; 5.22685842755756e6 -3.6681244112232793e6 -663434.0186748271; 5.228048765186664e6 -3.6685106036553592e6 -663738.6216968482; 5.229229662327621e6 -3.668890457814759e6 -664043.0391415864; 5.230400723100485e6 -3.669265288243808e6 -664345.0757359285; 5.231567884618325e6 -3.669635402041763e6 -664646.5640224372; 5.23272301407234e6 -3.669998504505813e6 -664946.8549348875; 5.233870980984321e6 -3.6703571026016907e6 -665245.0217124296; 5.235011389479894e6 -3.6707111498493706e6 -665543.4544812968; 5.236145418374333e6 -3.671058748860687e6 -665840.4586719692; 5.237270864040075e6 -3.6714017625889475e6 -666136.3298696382; 5.238388170957774e6 -3.6717391433446286e6 -666431.4161069616; 5.239496267985036e6 -3.6720712785156863e6 -666726.2087390792; 5.24059602463427e6 -3.6723980984142907e6 -667019.0950196879; 5.241689101870516e6 -3.6727191774651557e6 -667310.9388776026; 5.24277447851621e6 -3.6730344850507006e6 -667602.2108092015; 5.243850304433852e6 -3.6733445443208655e6 -667892.034322041; 5.244921615355904e6 -3.673650385678001e6 -668181.4651412157; 5.245979367938653e6 -3.673949314777588e6 -668468.6262513116; 5.247035008783641e6 -3.674243436376157e6 -668755.1899780909; 5.248083422844386e6 -3.674532810299792e6 -669041.4676831166; 5.2491234904049e6 -3.6748173358867825e6 -669327.1692498315; 5.250152672287962e6 -3.6750959209145373e6 -669611.260223921; 5.251175653931535e6 -3.6753691185956304e6 -669893.4275689599; 5.252192787510062e6 -3.6756374019886763e6 -670175.0400546379; 5.253200764443462e6 -3.6759000538002853e6 -670456.1433594486; 5.254199936132472e6 -3.676156636826574e6 -670735.4290536359; 5.255193308586083e6 -3.6764094844512767e6 -671014.045804081; 5.256171189302456e6 -3.676654095987299e6 -671290.6970703849]
T = 1;
A = UpperTriangularToeplitz([1, 0, 0, T, 0, 0, T^2/2, 0, 0]) |> Matrix
H = [I zeros(3, 6)];
v = diff(x,dims=1)
a = diff(v,dims=1)
Var_x = v[:,1] |> maximum;
Var_v = a[:,1] |> maximum;
Var_a = diff(a[:,1],dims=1) |> maximum;
C_etta=diagm([Var_x.*ones(3); Var_v.*ones(3); Var_a.*ones(3)]);
y0 = [x[1,:]; v[1,:]; a[1,:]]
M0 = C_etta;
C_v = diagm(1 .*ones(3));
params = (C_v=C_v, C_etta=C_etta, A=A, B=I, H=H, y0=y0, M0=C_etta)
y, M, K = kalman_vec(x; params...);
ys = invert(y)
vars = invert(diag.(M))
ys_max = [ys[i] .+ sqrt.(abs.(vars[i])) for i in 1:9]
ys_min = [ys[i] .- sqrt.(abs.(vars[i])) for i in 1:9];
xs = ys[1:3]
vs = ys[4:6]
as = ys[7:9];
x_mod = [hypot(x...) for x in invert(xs)]
v_mod = [hypot(v...) for v in invert(vs)]
a_mod = [hypot(a...) for a in invert(as)]

p1 = plot(x_mod./1e3, ylabel="x [km]", title="Din√°mica de Trayectoria - Filtro de Kalman")
p2 = plot(v_mod, ylabel="v [m/s]")
p3 = plot(a_mod, ylabel="a [m/s^2]", xlabel="t [s]")
#Now i want to save the plots on .png
savefig(p1,p2,p3, joinpath(@__DIR__, "plots.png"))
