Allocated GPU(s) with id(s):  0
Setting CUDA_VISIBLE_DEVICES=0
Setting NV_GPU=0
┌ Error: CUDA.jl could not find an appropriate CUDA runtime to use.
│ 
│ This can have several reasons:
│ * you are using an unsupported platform: this version of CUDA.jl
│   only supports Linux (x86_64, aarch64, ppc64le) and Windows (x86_64),
│   while your platform was identified as x86_64-linux-gnu-libgfortran5-cxx11-cuda+none-julia_version+1.9.0;
│ * you precompiled CUDA.jl in an environment where the CUDA driver
│   was not available (i.e., a container, or an HPC login node).
│   in that case, you need to specify which CUDA version to use
│   by calling `CUDA.set_runtime_version!`;
│ * you requested use of a local CUDA toolkit, but not all
│   required components were discovered. try running with
│   JULIA_DEBUG=all in your environment for more details.
│ 
│ For more details, refer to the CUDA.jl documentation at
│ https://cuda.juliagpu.org/stable/installation/overview/
└ @ CUDA ~/.julia/packages/CUDA/p5OVK/src/initialization.jl:82
ERROR: LoadError: CUDA runtime not found
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:35
 [2] functional
   @ ~/.julia/packages/CUDA/p5OVK/src/initialization.jl:24 [inlined]
 [3] task_local_state!()
   @ CUDA ~/.julia/packages/CUDA/p5OVK/lib/cudadrv/state.jl:77
 [4] active_state
   @ ~/.julia/packages/CUDA/p5OVK/lib/cudadrv/state.jl:112 [inlined]
 [5] cufunction(f::typeof(hello_world), tt::Type{Tuple{}}; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
   @ CUDA ~/.julia/packages/CUDA/p5OVK/src/compiler/execution.jl:304
 [6] cufunction(f::typeof(hello_world), tt::Type{Tuple{}})
   @ CUDA ~/.julia/packages/CUDA/p5OVK/src/compiler/execution.jl:303
 [7] top-level scope
   @ ~/.julia/packages/CUDA/p5OVK/src/compiler/execution.jl:104
in expression starting at /home/raul.horst/Clases_julia/holamundo.jl:14
